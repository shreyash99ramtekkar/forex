services:
  mt5-test:
    # build: ./MetaTrader5-Docker-Image/.
    image: gmag11/metatrader5_vnc
    container_name: mt5-test
    ports:
      - 3020:3000
      - 8020:8001
    networks:
      - app_network_test

  db-test:
    image: mysql
    container_name: forex-test-db
    restart: always
    volumes:
      - /opt/docker-data/test/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: qwerty123
    networks:
      - app_network_test

  mt5-api-test:
    build: 
      context: ./MT5-API/.
    container_name: mt5-api-test
    volumes:
      - /var/log/applog/test/:/app/logs/
    environment:
      - MT5_SERVER=mt5-test  # Pass MT5 host from .env or environment variables
      - DB_HOST=forex-test-db
    depends_on:
        - mt5-test
        - db-test
    ports: 
        - 5001:5000
    entrypoint: /bin/bash -c "/app/wait-for-it.sh mt5-test:8001 -t 300 -- python app.py"
    networks:
      - app_network_test


  app-test:
    build:
      context: ./forex-telegram-trade/.  # Build the image using the Dockerfile in the current directory
    container_name: telegram-app-test
    volumes:
      - /var/log/applog/test/:/app/logs/  # Mount host directory /var/log/applog to /app/logs for logs
    environment:
      - MT5-API-SERVER=mt5-api-test
    depends_on: 
      - mt5-api-test
    # entrypoint: /bin/bash -c "/app/wait-for-it.sh mt5-test:8001 -t 300 -- python main.py"
    entrypoint: python main.py
    networks:
      - app_network_test

volumes:
  app_logs:  # Named volume for the logs

networks:
  app_network_test:  # Custom network to enable communication between containers
    driver: bridge  # Use bridge network driver for communication
